{/*
  Functionality of CreateComment.js :

  - The Create Function of the CRUD
  - Holds a router that renders the '/' of the server, the commentList
  - Has the routes that will be accessed in the other components for CRUD
  */}


// - - -React, Router and Styles  - - - - - - - - //
import React, { Component } from 'react';
import axios from 'axios';

// - - - - - Material Imports - - - - - - - - - - //
import {Cell, Grid, Row} from '@material/react-layout-grid';
import TextField, {HelperText, Input} from '@material/react-text-field';
import Button from '@material/react-button';

// - - - - - - - - - - - - - - - - - - - - - //


class CreateUser extends Component {
  constructor(props) {
    super(props);

    // Creates a new state that will go into MongoDB
    // (without id as this is generated by Mongo)

    this.state = {
      name: '',
      picture: '',
      comment: ''
    };

    // handleChange for when user updates comment,
    // & handleSubmit for when they push it.

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  // - - - - - - - - - - - - - - - - - - - - - //

  handleChange(event) {
    const name = event.target.name;
    const value = event.target.value;

    this.setState({[name]: value});
  }

  handleSubmit(event) {
    event.preventDefault();

    // send a POST request to the server
    // the request includes the state, which is the info. for the new user to be created
    axios.post('/api/users', this.state)
      .then(res => this.props.history.push('/'))
      .catch(error => {
        console.log(error);
      });
  }

  render() {
    return (
      <Grid>
        <form onSubmit={this.handleSubmit} className ="Form">

          <TextField textarea  className ="Form" label = 'What is your name?'>
            <Input type="text"
              name="name"
              value={this.state.name}
              onChange={this.handleChange} />
          </TextField>
          <br/>
          <TextField className ="Form" textarea label = "Give us a look at your face!">
            <Input type="text"
              name="picture"
              value={this.state.picture}
              onChange={this.handleChange} />
          </TextField>
          <br/>
          <TextField textarea className ="Form" label = "Tell us what you think!">
            <Input type="text"
              name="comment"
              value={this.state.comment}
              onChange={this.handleChange} />
          </TextField>
          <Button type="submit" value="Submit">Upload Comment</Button>
        </form>
      </Grid>
    );
  }
}

export default CreateUser;
